~~
~~ The Maven Unit- and Integration Test Guide (MaUI for short)
~~
~~ Copyright (c) 2011 by SoftwareEntwicklung Beratung Schulung (SoEBeS)
~~ Copyright (c) 2011 by Karl Heinz Marbaise
~~
~~ Licensed to the Apache Software Foundation (ASF) under one or more
~~ contributor license agreements.  See the NOTICE file distributed with
~~ this work for additional information regarding copyright ownership.
~~ The ASF licenses this file to You under the Apache License, Version 2.0
~~ (the "License"); you may not use this file except in compliance with
~~ the License.  You may obtain a copy of the License at
~~
~~    http://www.apache.org/licenses/LICENSE-2.0
~~
~~ Unless required by applicable law or agreed to in writing, software
~~ distributed under the License is distributed on an "AS IS" BASIS,
~~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
~~ See the License for the specific language governing permissions and
~~ limitations under the License.
~~

 ------
 Unit Testing with Maven
 ------
 Karl Heinz Marbaise
 ------
 1. April 2011
 ------

Unit Testing with Maven

* Overview

  The execution of unit tests is handled by the
  {{{http://maven.apache.org/plugins/maven-surefire-plugin/}Maven Surefire Plugin}}.

  If you already familiar with {{{http://maven.apache.org}Maven}} you know
  {{{http://maven.apache.org/guides/introduction/introduction-to-the-standard-directory-layout.html}where to put your unit tests}}.
  The <<Maven way>> is to put unit tests into <<<src/test/java>>> and their
  appropriate resources into <<<src/test/resources>>>.


* First simple example

  The first {{{./ut-example.html}unit test example}}  will show you a simple project with unit tests and
  how a execution will look like.

  The other examples like the {{{./ut-example-mu.html}unit test multiple usage}} shows how to reuse a classes which
  are defined in src/test/java area.



  []

